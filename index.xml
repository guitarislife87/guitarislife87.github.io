<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The Mastering Jack</title>
    <link>/</link>
    <description>Recent content on The Mastering Jack</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Potato Pave Plus</title>
      <link>/posts/potato-pave-plus/</link>
      <pubDate>Tue, 07 Jan 2025 00:00:00 +0000</pubDate>
      
      <guid>/posts/potato-pave-plus/</guid>
      <description>&lt;p&gt;I attempted my hand a ChefStep&amp;rsquo;s &lt;a href=&#34;https://www.youtube.com/watch?v=ZRzwRw4Z6KM&#34;&gt;Potato Pave Croissant&lt;/a&gt;. My main alteration was that swapped oil frying with air frying. I know, culinary blasphemy. But that speaks to how much I do not like frying.&lt;/p&gt;
&lt;p&gt;The final result is topped with carnitas and sour cream. While good, it was a good reminder that even if you think the final dish might be salty, salt your potatoes.&lt;/p&gt;
&lt;p&gt;!&lt;img src=&#34;/images/potatopavecroissant0.png&#34; alt=&#34;Image Description&#34;&gt;
!&lt;img src=&#34;/images/potatopavecroissant3.png&#34; alt=&#34;Image Description&#34;&gt;&lt;/p&gt;
&lt;p&gt;!&lt;img src=&#34;/images/potatopavecroissant2.png&#34; alt=&#34;Image Description&#34;&gt;&lt;/p&gt;
&lt;p&gt;!&lt;img src=&#34;/images/potatopavecroissant1.png&#34; alt=&#34;Image Description&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Obsidian Habit Tracking</title>
      <link>/posts/obsidian-habit-tracking/</link>
      <pubDate>Mon, 06 Jan 2025 00:00:00 +0000</pubDate>
      
      <guid>/posts/obsidian-habit-tracking/</guid>
      <description>&lt;h2 id=&#34;the-goal&#34;&gt;The Goal&lt;/h2&gt;
&lt;p&gt;For New Year&amp;rsquo;s resolutions, I&amp;rsquo;ve found that I can &amp;ldquo;get back on the wagon&amp;rdquo; better if my goals aren&amp;rsquo;t daily. Some days, there are more obligations, so I don&amp;rsquo;t need to make those hurdles for other goals.
With that I create weekly goals that need progress aggregated from multiples days. For example, I task myself with exercising 150 hours a week. I also need to track the number of occurrences of an event (publishing blog posts that aren&amp;rsquo;t drafts) over a week. Finally, the good old weight watching doesn&amp;rsquo;t need to be grouped weekly but simply viewed over time.&lt;/p&gt;
&lt;h2 id=&#34;pulling-the-data&#34;&gt;Pulling the Data&lt;/h2&gt;
&lt;p&gt;For simple tracking, I started with putting properties in my daily notes&amp;rsquo; frontmatter. They&amp;rsquo;re prefixed with &lt;code&gt;habit.&lt;/code&gt; in the hopes of preventing future collisions, but it doesn&amp;rsquo;t affect the query. For tracking blog entries, I decided to track each blog entry&amp;rsquo;s file with it&amp;rsquo;s frontmatter date. That would require no extra information than what I needed for my publishing workflow.&lt;/p&gt;
&lt;h3 id=&#34;habits-query&#34;&gt;Habits Query&lt;/h3&gt;
&lt;p&gt;Obsidian&amp;rsquo;s DataView query language may look like standard SQL, but it has some deviations. Aggregate values (i.e., those calculated from grouping) require to use the Non-SQL Flatten keyword after the grouping. For each FLATTEN, you can do an aggregate function (sum, count, etc) and declare a value like you would in the SELECT of a regular SQL query. Those values can then be used in the main projection part of the query to make further calculations. In this case, I generate the html for the progress bar with the value set.&lt;/p&gt;
&lt;p&gt;The final piece was how to group by week of the year. Using &lt;code&gt;YY-WW&lt;/code&gt; as the format string yielded an entry for &amp;ldquo;24-01&amp;rdquo; which was a year ago. After looking at Luxon&amp;rsquo;s documentation, one sees that &lt;code&gt;kk&lt;/code&gt; is the 2 digit &amp;ldquo;week year&amp;rdquo; or the year corresponding to &lt;code&gt;WW&lt;/code&gt;, the 2 digit week of year.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;TABLE WITHOUT ID
	Week,
	&amp;#34;&amp;lt;progress value=&amp;#39;&amp;#34; + ExerciseCalc + &amp;#34;&amp;#39; max=&amp;#39;150&amp;#39; /&amp;gt;&amp;#34; as &amp;#34;Exercise (150)&amp;#34;,
	&amp;#34;&amp;lt;progress value=&amp;#39;&amp;#34; + ReadingCalc + &amp;#34;&amp;#39; max=&amp;#39;150&amp;#39; /&amp;gt;&amp;#34; as &amp;#34;Reading (150)&amp;#34;,
	&amp;#34;&amp;lt;progress value=&amp;#39;&amp;#34; + MusicCalc + &amp;#34;&amp;#39; max=&amp;#39;150&amp;#39; /&amp;gt;&amp;#34; as &amp;#34;Music (150)&amp;#34;,
	&amp;#34;&amp;lt;progress value=&amp;#39;&amp;#34; + OldNorseCalc + &amp;#34;&amp;#39; max=&amp;#39;105&amp;#39; /&amp;gt;&amp;#34; as &amp;#34;Old Norse (105)&amp;#34;
FROM &amp;#34;06 - Daily&amp;#34;
GROUP BY dateformat(date(file.name, &amp;#34;yyyy-MM-dd&amp;#34;), &amp;#34;kk-WW&amp;#34;) as Week
FLATTEN sum(rows.file.frontmatter[&amp;#34;habit.exercise&amp;#34;]) as ExerciseCalc
FLATTEN sum(rows.file.frontmatter[&amp;#34;habit.reading&amp;#34;]) as ReadingCalc
FLATTEN sum(rows.file.frontmatter[&amp;#34;habit.music&amp;#34;]) as MusicCalc
FLATTEN sum(rows.file.frontmatter[&amp;#34;habit.old-norse&amp;#34;]) as OldNorseCalc
SORT Week ASC
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;blog-query&#34;&gt;Blog Query&lt;/h3&gt;
&lt;p&gt;With all the information from the first query, it was simple to iterate through all my blog posts and count the number for each week that were not marked as drafts.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;TABLE WITHOUT ID
	Week,
	&amp;#34;&amp;lt;progress value=&amp;#39;&amp;#34; + BlogCalc + &amp;#34;&amp;#39; max=&amp;#39;3&amp;#39; /&amp;gt;&amp;#34; as &amp;#34;Blogs (3)&amp;#34;
FROM &amp;#34;04 - Permanent/Blog/posts&amp;#34;
GROUP BY dateformat(date(file.frontmatter[&amp;#34;date&amp;#34;]), &amp;#34;kk-WW&amp;#34;) as Week
FLATTEN sum(choice(rows.file.frontmatter.draft = &amp;#34;true&amp;#34;, 0, 1)) as BlogCalc
SORT Week ASC
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;weight-line-graph&#34;&gt;Weight Line Graph&lt;/h3&gt;
&lt;p&gt;Line graphs require an additional Obsidian plugin that brings the Chart.js library into Obsidian. After a few examples, some back and forth with ChatGPT, and fighting to match the data structure in the Chart.js documentation (Give me some static times, please!), I finally had a graph from the value in my daily notes.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// Note: changes to the plugin code is not reflected to the chart, because the plugin is loaded at chart construction time and editor changes only trigger an chart.update().
const plugin = {
  id: &amp;#39;customCanvasBackgroundColor&amp;#39;,
  beforeDraw: (chart, args, options) =&amp;gt; {
    const {ctx} = chart;
    ctx.save();
    ctx.globalCompositeOperation = &amp;#39;destination-over&amp;#39;;
    ctx.fillStyle = options.color || &amp;#39;#ffffff&amp;#39;;
    ctx.fillRect(0, 0, chart.width, chart.height);
    ctx.restore();
  }
};

// Get all pages in the &amp;#34;06 - Daily&amp;#34; folder with the &amp;#34;habit.weight&amp;#34; field in frontmatter
const pages = dv.pages(&amp;#39;&amp;#34;06 - Daily&amp;#34;&amp;#39;) .where(p =&amp;gt; p.file.frontmatter[&amp;#34;habit.weight&amp;#34;] &amp;amp;&amp;amp; p.file.frontmatter[&amp;#34;habit.weight&amp;#34;] !== 0) .sort(p =&amp;gt; p.file.name).array();
// Sort the pages by filename or date
// Prepare data for Chart.js
let labels = pages.map(p =&amp;gt; p.file.name);
// Use file names as the labels
let weights = pages.map(p =&amp;gt; p.file.frontmatter[&amp;#34;habit.weight&amp;#34;]);
// Extract the habit.weight field
// Chart.js data format

let data = { 
	type: &amp;#39;line&amp;#39;,
	data: {
		labels: labels,
		datasets: [{ 
			label: &amp;#39;Weight&amp;#39;,
			data: weights,
			backgroundColor: [&amp;#39;#000000&amp;#39;]
		}]
	},
	options: {
	    plugins: {
	      customCanvasBackgroundColor: {
	        color: &amp;#39;white&amp;#39;,
	      }
	    }
  },
  plugins: [plugin],
};

window.renderChart(data, this.container);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Combing all those query together gave me this page, which had some display issues. Data on dashboards should be seen at a glance and not having to scroll.
!&lt;img src=&#34;/images/Habit%20Tracking%201.png&#34; alt=&#34;Image Description&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;fixing-the-width-to-see-everything&#34;&gt;Fixing the Width To See Everything&lt;/h2&gt;
&lt;p&gt;Following &lt;a href=&#34;https://forum.obsidian.md/t/how-to-set-dataview-table-width-to-100-and-nothing-else-trying-to-extract-the-code-from-minimal-theme-to-use-in-another-theme/88772&#34;&gt;this post&lt;/a&gt;, I added some css classes to Obsidian. When I added the &lt;code&gt;page-100&lt;/code&gt; value in the cssclasses frontmatter field, the width of the document goes to the full width of the tab. 4 progress bars now have almost too much room on an HD monitor.&lt;/p&gt;
&lt;p&gt;!&lt;img src=&#34;/images/Habit%20Tracking%20Wide.png&#34; alt=&#34;Image Description&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;wrap-up&#34;&gt;Wrap Up&lt;/h2&gt;
&lt;p&gt;Hopefully, this will be an easy system to input my progress and see where I stand. If I create the daily note in the morning, I&amp;rsquo;m able to make a commit in GitHub to update the frontmatter through out the day on my phone. Maybe my eyes are bigger than my stomach on this New Year&amp;rsquo;s resolution plate, but at least I can see and remember what I&amp;rsquo;m eating.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Obsidian Second Brain</title>
      <link>/posts/obsidian-second-brain/</link>
      <pubDate>Thu, 02 Jan 2025 00:00:00 +0000</pubDate>
      
      <guid>/posts/obsidian-second-brain/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve wanted to start up a second brain for a while and decided to with a combination of PARA and Zettelkasten that &lt;a href=&#34;https://www.youtube.com/watch?v=rAkerV8rlow&#34;&gt;a YouTuber name CyanVoxel created&lt;/a&gt; as my organizational system. PARA (or Projects, Areas, Resources, and Archive) covers a creative and task based activities while Zettelkasten works better for information synthesis. The two have overlap in the Resources section which I think of as external information sources. Here&amp;rsquo;s how I&amp;rsquo;ve laid out so far:
!&lt;img src=&#34;/images/Second%20Brain%20Organization.png&#34; alt=&#34;Image Description&#34;&gt;
There are a few things that I might change. When starting the blog, I thought it fit better under the Permanent synthesized notes of Zettelkasten. It would be the only exposed to the public. I could see it ending up under Areas as an ongoing project. I don&amp;rsquo;t like having Resources broken down by source, so I&amp;rsquo;ll restructure that as pull in different modes of information. In the end, there&amp;rsquo;s no right answer besides what feels best. That&amp;rsquo;s the double edged sword of combining some systems.&lt;/p&gt;
&lt;p&gt;Other things work well. Having a folder per project and a page per task works well with Obsidian&amp;rsquo;s &lt;a href=&#34;https://github.com/marcusolsson/obsidian-projects&#34;&gt;Projects community plugin&lt;/a&gt;. Frontmatter gives me the flexibility to query and aggregate structured information without having to fill in entries for every single page. Finally, having notes in Markdown and being synced to a GitHub repository is convenient for accessing information even if I don&amp;rsquo;t have Obsidian on a device, say a phone or work computer.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Starting a Blog</title>
      <link>/posts/starting-a-blog/</link>
      <pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate>
      
      <guid>/posts/starting-a-blog/</guid>
      <description>&lt;h2 id=&#34;why-start-a-blog&#34;&gt;Why Start a Blog?&lt;/h2&gt;
&lt;p&gt;Self Expression - The best ways to get better at something are to A) practice and B) teach. Hopefully, this will be good practice at communicating in writing and solidify things I learn.&lt;/p&gt;
&lt;p&gt;Encourage reflection - I admit that I&amp;rsquo;m a shiny chaser. Maybe that&amp;rsquo;s a Software Engineer thing, maybe it&amp;rsquo;s a Millennial thing, maybe something else. Reflection will lead to better choices about staying with something or a better next thing.&lt;/p&gt;
&lt;p&gt;Have something to jog memories - There are some personal events going on in my life that remind me that memories make up a lot of who we are. Whether my brain removed a piece of information while compacting or something more serious, there will be a backup of at least part of what I&amp;rsquo;ve experienced and learned.&lt;/p&gt;
&lt;p&gt;Share learnings and ideas - I think the things I work on in my spare time are cool and interesting. Surely, someone else thinks they are, too. Those readers can then bypass the things that I had to hammer out.&lt;/p&gt;
&lt;h2 id=&#34;build&#34;&gt;Build&lt;/h2&gt;
&lt;p&gt;The first few steps about Obsidian, Hugo, and some of GitHub were from &lt;a href=&#34;https://www.youtube.com/watch?v=dnE7c0ELEH8&#34;&gt;a tutorial by NetworkChuck&lt;/a&gt;. I decided to use GitHub Pages instead of Hostinger. I&amp;rsquo;ve listed the deviations from the tutorial below.&lt;/p&gt;
&lt;h3 id=&#34;tool-installations&#34;&gt;Tool Installations&lt;/h3&gt;
&lt;p&gt;I have the habit of using version managers from work, so instead of installing go directly, I installed it from &lt;a href=&#34;https://github.com/asdf-vm/asdf&#34;&gt;asdf&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;asdf plugin add golang https://github.com/asdf-community/asdf-golang.git
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;asdf install golang 1.23.3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I also added &lt;code&gt;golang 1.23.3&lt;/code&gt; to my &lt;code&gt;$HOME/.tool-versions&lt;/code&gt; file.
I spent way too long debugging that Hugo was out of date, and switched to 0.140.2 with asdf instead of the apt package&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;asdf plugin add hugo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;asdf install hugo 0.140.2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That requires as &lt;code&gt;hugo 0.140.2&lt;/code&gt; in the &lt;code&gt;$HOME/.tool-versions&lt;/code&gt; file as well.&lt;/p&gt;
&lt;h3 id=&#34;different-theme-changes&#34;&gt;Different Theme Changes&lt;/h3&gt;
&lt;h4 id=&#34;sass&#34;&gt;Sass&lt;/h4&gt;
&lt;p&gt;I needed to install dart-sass for theme. I didn&amp;rsquo;t want to edit my &lt;code&gt;$PATH&lt;/code&gt;, so I went for the npm route &lt;code&gt;npm install -g sass&lt;/code&gt;. Hugo still complained about sass execute permissions, so I added it &lt;code&gt;chmod +rx &amp;lt;node install&amp;gt;/bin/sass&lt;/code&gt;. That still didn&amp;rsquo;t work, so I installed &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; for Linux to install sass. That finally worked.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install sass/sass/sass
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;postcss&#34;&gt;PostCSS&lt;/h4&gt;
&lt;p&gt;I followed follow &lt;a href=&#34;https://gohugo.io/functions/css/postcss/&#34;&gt;these instructions&lt;/a&gt; to install postCSS. I was hesitant about using npm again, but this tutorial worked.&lt;/p&gt;
&lt;h3 id=&#34;add-a-gitignore&#34;&gt;Add a .gitignore&lt;/h3&gt;
&lt;p&gt;I don&amp;rsquo;t like committing generated items, especially if they&amp;rsquo;re going to be uploaded elsewhere. I&amp;rsquo;d eventually have to remove &lt;code&gt;public/&lt;/code&gt; for the GitHub Pages submodule.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;public/
resources/_gen/
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;hosting-on-github-pageshttpspagesgithubcom-instead-of-hostinger&#34;&gt;Hosting on &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt; instead of Hostinger&lt;/h3&gt;
&lt;h4 id=&#34;convert-the-public-folder-to-a-submodule&#34;&gt;Convert the public folder to a submodule&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Create the github.io repository&lt;/li&gt;
&lt;li&gt;Delete the public folder (It&amp;rsquo;ll get regenerated)&lt;/li&gt;
&lt;li&gt;Add the GitHub Pages repo as a submodule&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git submodule add git@github.com:&amp;lt;username&amp;gt;/&amp;lt;username&amp;gt;.github.io.git public
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;create-a-publish-script&#34;&gt;Create a publish script&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rsync -av --delete ~/&amp;lt;obsidian vault&amp;gt;/posts ~/&amp;lt;hugo repo&amp;gt;/content/posts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd public
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git pull
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd ../
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 images.py &lt;span style=&#34;color:#75715e&#34;&gt;# NetworkChucks original script to pull in images&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd public
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git add --all
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Automated Commit from Script&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push origin main
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;configure-the-github-repo&#34;&gt;Configure the GitHub Repo&lt;/h4&gt;
&lt;p&gt;After the first commit, configure the custom domain and TLS under Settings &amp;gt; Pages in GitHub&lt;/p&gt;
&lt;h2 id=&#34;learnings&#34;&gt;Learnings&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;NPM should not be used as a tool package manager when at all possible. Try to use something like Homebrew or asdf instead.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>MacOS Sit-Stand Notifications</title>
      <link>/posts/macos-sit-stand-notifications/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/posts/macos-sit-stand-notifications/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve had a sit/stand desks at home for a year. They been available at the office for more than six. However, I infrequently use the stand feature. My back may be hurting. The person who used it before me left it in a standing position. I&amp;rsquo;ll jump on the health train for a minute saying it&amp;rsquo;s good for me to forget it day later. My hypothesis is that I need to remove the thinking from my day and tell myself when to change positions.&lt;/p&gt;
&lt;p&gt;My alert fatigued brain is already going, &amp;ldquo;Not another one!&amp;rdquo; So, I need to make this as fine tuned as I can. First, it must only appear on my work computer during the day. This rules out Slack which I also have a need (that I don&amp;rsquo;t heed enough) to mute from time to time. Since this is a work computer, I also wanted to limit yet another niche app from the internet. This lead me to using &lt;a href=&#34;https://support.apple.com/guide/automator/welcome/mac&#34;&gt;Automator&lt;/a&gt;. To run my custom app, I ended up using CronTab over the recommended LaunchD.&lt;/p&gt;
&lt;h1 id=&#34;create-an-automator-app&#34;&gt;Create an Automator &amp;ldquo;App&amp;rdquo;&lt;/h1&gt;
&lt;p&gt;Though I barely scratched the surface, Automater seems pretty capable of doing what it&amp;rsquo;s name implies: automating tasks and stringing them into workflows. The online documentation lacks library details, but it was pretty intuitive to create a new workflow, add a system notification action with a custom message, and save it as a MacOS app. Clicking on the final .app file immediately fires my notification to &amp;ldquo;Change Desk Position&amp;rdquo;.&lt;/p&gt;
&lt;h1 id=&#34;set-up-crontab&#34;&gt;Set Up CronTab&lt;/h1&gt;
&lt;p&gt;Yes, Apple recommends using LaunchD, but surprise, it doesn&amp;rsquo;t have the versatility without the verbosity of enumerating every notification time for a week. Maybe, someday, I&amp;rsquo;ll script the generation. CronTab has fewer steps to set up as well. But, this is a post about getting something functional, not perfect. To open the config file, type:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;crontab -e
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For this notification, I wanted pinged every hour from 9 to 4 on weekdays. That line looks like this in the&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;0 9-16 * * 1-5 open ~/&amp;lt;Path to ICloud&amp;gt;/&amp;lt;Automator Folder&amp;gt;/&amp;lt;&amp;#34;App&amp;#34; Name&amp;gt;.app
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And that&amp;rsquo;s pretty much it. I did have to debug spaces in the path and using &lt;code&gt;open&lt;/code&gt; to keep the cron from treating the .app as the folder it really is behind the scenes. Now I&amp;rsquo;ve got a notification that will follow me to and from the office but not onto my personal devices. It&amp;rsquo;s only been one day so far, but there was a lot more standing.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
